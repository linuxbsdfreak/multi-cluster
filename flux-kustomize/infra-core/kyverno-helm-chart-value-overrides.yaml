nameOverride: "kyverno"
fullnameOverride: "kyverno"
namespaceOverride: "kyverno"

policyReportsCleanup:
  enabled: true
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
        - CAP_NET_RAW
    seccompProfile:
      type: RuntimeDefault
crds:
  migration:
    enabled: false
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
          - CAP_NET_RAW
      seccompProfile:
        type: RuntimeDefault
config:
  preserve: false
  excludeGroups:
    - system:nodes
  webhooks:
    namespaceSelector:
      matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        values:
          - kube-system
          - kyverno
          - istio-system
          - kube-public
          - kyma-system
          - kube-public
apiVersionOverride:
  podDisruptionBudget: "policy/v1"
features:
  forceFailurePolicyIgnore:
    enabled: true
  policyExceptions:
    enabled: true
    namespace: kyverno
webhooksCleanup:
  enabled: false
  image:
    pullPolicy: IfNotPresent

admissionController:
  podAnnotations:
    metrics.dynatrace.com/scrape: 'true'
    metrics.dynatrace.com/path: '/metrics'
    metrics.dynatrace.com/port: '8000'
    metrics.dynatrace.com/secure: 'false'
  replicas: 3
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/component
          operator: In
          values:
          - admission-controller
      topologyKey: "kubernetes.io/hostname"
  initContainer:
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
          - CAP_NET_RAW
      seccompProfile:
        type: RuntimeDefault
    resources:
      limits:
        cpu: 1
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 64Mi
  container:
    extraArgs:
        clientRateLimitQPS: 300
        clientRateLimitBurst: 300
        leaderElectionRetryPeriod: 10s
    resources:
      limits:
        cpu: 1
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 64Mi
  rbac:
    coreClusterRole:
      extraResources:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
    clusterRole:
      extraResources:
        - apiGroups:
            - apps
          resources:
            - deployments
          verbs:
            - update
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
          - CAP_NET_RAW
      seccompProfile:
        type: RuntimeDefault

backgroundController:
  podAnnotations:
    metrics.dynatrace.com/scrape: 'true'
    metrics.dynatrace.com/path: '/metrics'
    metrics.dynatrace.com/port: '8000'
    metrics.dynatrace.com/secure: 'false'
  replicas: 2
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/component
          operator: In
          values:
          - background-controller
      topologyKey: "kubernetes.io/hostname"
  resources:
    limits:
      cpu: 1
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 64Mi
  extraArgs:
    leaderElectionRetryPeriod: 10s
  rbac:
    coreClusterRole:
      extraResources:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - networking.k8s.io
          resources:
            - ingresses
            - ingressclasses
            - networkpolicies
          verbs:
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - rbac.authorization.k8s.io
          resources:
            - rolebindings
            - roles
          verbs:
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - ''
          resources:
            - configmaps
            - secrets
            - resourcequotas
            - limitranges
          verbs:
            - create
            - update
            - patch
            - delete
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources:
          - apiGroups:
            - ''
            resources:
            - pods
            - events
            verbs:
            - create
            - update
            - delete
            - patch
          - apiGroups:
            - ""
            - extensions
            - batch
            - apps
            - gateway.kyma-project.io
            - servicecatalog.k8s.io
            resources:
            - deployments
            - replicasets
            - pods
            - jobs
            - cronjobs
            - configmaps
            - apirules
            - serviceaccounts
            - serviceinstances
            - servicebindings
            - services
            - secrets
            verbs:
            - create
            - update
            - patch
            - delete
            - get
            - list
          - apiGroups:
            - rbac.authorization.k8s.io
            resources:
            - clusterroles
            verbs:
            - create
            - update
            - delete            
securityContext:
  runAsUser: 65534
  runAsGroup: 65534
  runAsNonRoot: true
  privileged: false
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
      - CAP_NET_RAW
  seccompProfile:
    type: RuntimeDefault

cleanupController:
  podAnnotations:
    metrics.dynatrace.com/scrape: 'true'
    metrics.dynatrace.com/path: '/metrics'
    metrics.dynatrace.com/port: '8000'
    metrics.dynatrace.com/secure: 'false'
  replicas: 2
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/component
          operator: In
          values:
          - cleanup-controller
      topologyKey: "kubernetes.io/hostname"
  resources:
    limits:
      cpu: 1
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 64Mi
  extraArgs:
    leaderElectionRetryPeriod: 10s
  rbac:
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources:
        - apiGroups:
            - ''
          resources:
            - pods
          verbs:
            - delete
            - list
            - watch  
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
        - CAP_NET_RAW
    seccompProfile:
      type: RuntimeDefault

reportsController:
  podAnnotations:
    metrics.dynatrace.com/scrape: 'true'
    metrics.dynatrace.com/path: '/metrics'
    metrics.dynatrace.com/port: '8000'
    metrics.dynatrace.com/secure: 'false'
  replicas: 2
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/component
          operator: In
          values:
          - reports-controller
      topologyKey: "kubernetes.io/hostname"
  resources:
    limits:
      cpu: 1
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 64Mi
  extraArgs:
    leaderElectionRetryPeriod: 10s
  rbac:
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources:
        - apiGroups:
            - ''
          resources:
            - pods
          verbs:
            - delete
            - list
            - watch
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
        - CAP_NET_RAW
    seccompProfile:
      type: RuntimeDefault
